{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor() {\n    this.title = 'myApp';\n  }\n  // Function to calculate the number of days in a given date.\n  calculateNumberOfDays(dateString) {\n    const date = new Date(dateString);\n    return date.getDate();\n  }\n  // Function to get the total number of days in a given month.\n  getTotalDaysInMonth(year, month) {\n    // Create a date for the 0th day of the next month.\n    const lastDayOfMonth = new Date(year, month, 0);\n    return lastDayOfMonth.getDate();\n  }\n  // Function to generate an array of dates in a specified month.\n  generateDatesInMonth(year, month, numberOfDates) {\n    const dateArray = [];\n    for (let day = 1; day <= numberOfDates; day++) {\n      const dateString = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n      const numberOfDays = this.calculateNumberOfDays(dateString);\n      const totalDaysInMonth = this.getTotalDaysInMonth(year, month);\n      dateArray.push({\n        date: dateString,\n        numberOfDays,\n        totalDaysInMonth\n      });\n    }\n    return dateArray;\n  }\n  ngOnInit() {\n    // Define the year and month (e.g., 2023-03 for March 2023).\n    const year = 2023;\n    const month = 3; // March\n    // Generate an array of dates (1 to 20 dates in the selected month).\n    const datesInMonth = this.generateDatesInMonth(year, month, 20);\n    // Output the results\n    datesInMonth.forEach((date, index) => {\n      console.log(`Date ${index + 1}: ${date.date} has ${date.numberOfDays} days. Total days in the month: ${date.totalDaysInMonth}`);\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","title","calculateNumberOfDays","dateString","date","Date","getDate","getTotalDaysInMonth","year","month","lastDayOfMonth","generateDatesInMonth","numberOfDates","dateArray","day","toString","padStart","numberOfDays","totalDaysInMonth","push","ngOnInit","datesInMonth","forEach","index","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\anura\\OneDrive\\Desktop\\task\\nodejs\\angular\\myApp\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myApp';\n  \n  // Function to calculate the number of days in a given date.\n  calculateNumberOfDays(dateString: string): number {\n    const date = new Date(dateString);\n    return date.getDate();\n  }\n\n  // Function to get the total number of days in a given month.\n  getTotalDaysInMonth(year: number, month: number): number {\n    // Create a date for the 0th day of the next month.\n    const lastDayOfMonth = new Date(year, month, 0);\n    return lastDayOfMonth.getDate();\n  }\n\n  // Function to generate an array of dates in a specified month.\n  generateDatesInMonth(year: number, month: number, numberOfDates: number): any[] {\n    const dateArray = [];\n    for (let day = 1; day <= numberOfDates; day++) {\n      const dateString = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n      const numberOfDays = this.calculateNumberOfDays(dateString);\n      const totalDaysInMonth = this.getTotalDaysInMonth(year, month);\n      dateArray.push({\n        date: dateString,\n        numberOfDays,\n        totalDaysInMonth\n      });\n    }\n    return dateArray;\n  }\n\n  ngOnInit() {\n    // Define the year and month (e.g., 2023-03 for March 2023).\n    const year = 2023;\n    const month = 3; // March\n\n    // Generate an array of dates (1 to 20 dates in the selected month).\n    const datesInMonth = this.generateDatesInMonth(year, month, 20);\n\n    // Output the results\n    datesInMonth.forEach((date, index) => {\n      console.log(`Date ${index + 1}: ${date.date} has ${date.numberOfDays} days. Total days in the month: ${date.totalDaysInMonth}`);\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAAlBC,YAAA;IACL,KAAAC,KAAK,GAAG,OAAO;EA4CjB;EA1CE;EACAC,qBAAqBA,CAACC,UAAkB;IACtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,OAAO,EAAE;EACvB;EAEA;EACAC,mBAAmBA,CAACC,IAAY,EAAEC,KAAa;IAC7C;IACA,MAAMC,cAAc,GAAG,IAAIL,IAAI,CAACG,IAAI,EAAEC,KAAK,EAAE,CAAC,CAAC;IAC/C,OAAOC,cAAc,CAACJ,OAAO,EAAE;EACjC;EAEA;EACAK,oBAAoBA,CAACH,IAAY,EAAEC,KAAa,EAAEG,aAAqB;IACrE,MAAMC,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIF,aAAa,EAAEE,GAAG,EAAE,EAAE;MAC7C,MAAMX,UAAU,GAAG,GAAGK,IAAI,IAAIC,KAAK,CAACM,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,GAAG,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MACpG,MAAMC,YAAY,GAAG,IAAI,CAACf,qBAAqB,CAACC,UAAU,CAAC;MAC3D,MAAMe,gBAAgB,GAAG,IAAI,CAACX,mBAAmB,CAACC,IAAI,EAAEC,KAAK,CAAC;MAC9DI,SAAS,CAACM,IAAI,CAAC;QACbf,IAAI,EAAED,UAAU;QAChBc,YAAY;QACZC;OACD,CAAC;;IAEJ,OAAOL,SAAS;EAClB;EAEAO,QAAQA,CAAA;IACN;IACA,MAAMZ,IAAI,GAAG,IAAI;IACjB,MAAMC,KAAK,GAAG,CAAC,CAAC,CAAC;IAEjB;IACA,MAAMY,YAAY,GAAG,IAAI,CAACV,oBAAoB,CAACH,IAAI,EAAEC,KAAK,EAAE,EAAE,CAAC;IAE/D;IACAY,YAAY,CAACC,OAAO,CAAC,CAAClB,IAAI,EAAEmB,KAAK,KAAI;MACnCC,OAAO,CAACC,GAAG,CAAC,QAAQF,KAAK,GAAG,CAAC,KAAKnB,IAAI,CAACA,IAAI,QAAQA,IAAI,CAACa,YAAY,mCAAmCb,IAAI,CAACc,gBAAgB,EAAE,CAAC;IACjI,CAAC,CAAC;EACJ;CACD;AA7CYnB,YAAY,GAAA2B,UAAA,EALxB5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACW9B,YAAY,CA6CxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}