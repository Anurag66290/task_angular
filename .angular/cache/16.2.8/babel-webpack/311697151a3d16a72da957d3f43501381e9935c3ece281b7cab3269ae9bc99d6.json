{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class DateCalculatorComponent {\n  constructor() {\n    this.selectedDates = '';\n    this.consoleOutput = ''; // Variable to store console log output\n  }\n\n  onDateInputChange() {\n    // Capture the input change and log it\n    this.consoleOutput = 'Input changed: ' + this.selectedDates;\n    console.log(this.consoleOutput);\n  }\n  calculateDaysInDates() {\n    // Calculate days and capture the result\n    const daysInDates = this.selectedDates.split(',').map(date => {\n      return this.calculateDaysFromDate(new Date(date.trim()));\n    });\n    this.consoleOutput = 'Days in Dates: ' + daysInDates.join(', ');\n    console.log(this.consoleOutput);\n  }\n  calculateDaysFromDate(date) {\n    const currentDate = new Date();\n    const difference = date.getTime() - currentDate.getTime();\n    const daysDifference = Math.floor(difference / (1000 * 60 * 60 * 24));\n    return daysDifference;\n  }\n  getDaysInMonth() {\n    // Calculate total days in the current month and capture the result\n    const currentDate = new Date();\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const lastDay = new Date(year, month + 1, 0);\n    const totalDays = lastDay.getDate();\n    this.consoleOutput = 'Total days in the current month: ' + totalDays;\n    console.log(this.consoleOutput);\n  }\n  static #_ = this.ɵfac = function DateCalculatorComponent_Factory(t) {\n    return new (t || DateCalculatorComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DateCalculatorComponent,\n    selectors: [[\"app-date-calculator\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[\"for\", \"datesInput\"], [\"type\", \"date\", \"id\", \"datesInput\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [3, \"click\"], [\"id\", \"consoleOutput\"]],\n    template: function DateCalculatorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Angular Date Calculator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"label\", 0);\n        i0.ɵɵtext(4, \"Select Dates (comma-separated):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function DateCalculatorComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.selectedDates = $event;\n        })(\"input\", function DateCalculatorComponent_Template_input_input_5_listener() {\n          return ctx.onDateInputChange();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function DateCalculatorComponent_Template_button_click_6_listener() {\n          return ctx.calculateDaysInDates();\n        });\n        i0.ɵɵtext(7, \"Calculate Days in Dates\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function DateCalculatorComponent_Template_button_click_8_listener() {\n          return ctx.getDaysInMonth();\n        });\n        i0.ɵɵtext(9, \"Get Total Days in Month\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"p\");\n        i0.ɵɵtext(12, \"Console Log Output:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedDates);\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate(ctx.consoleOutput);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    styles: [\"\\n\\n\\nh2[_ngcontent-%COMP%] {\\n    color: #333;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    font-size: 16px;\\n    margin-right: 10px;\\n  }\\n  \\n  input[type=\\\"date\\\"][_ngcontent-%COMP%] {\\n    padding: 5px;\\n    font-size: 16px;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    padding: 10px 20px;\\n    cursor: pointer;\\n  }\\n  \\n  button[_ngcontent-%COMP%]:hover {\\n    background-color: #0056b3;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGF0ZS1jYWxjdWxhdG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0NBQWtDOztBQUVsQztJQUNJLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGVBQWU7SUFDZixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxZQUFZO0lBQ1osZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGRhdGUtY2FsY3VsYXRvci5jb21wb25lbnQuY3NzICovXHJcblxyXG5oMiB7XHJcbiAgICBjb2xvcjogIzMzMztcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXSB7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICBidXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DateCalculatorComponent","constructor","selectedDates","consoleOutput","onDateInputChange","console","log","calculateDaysInDates","daysInDates","split","map","date","calculateDaysFromDate","Date","trim","join","currentDate","difference","getTime","daysDifference","Math","floor","getDaysInMonth","year","getFullYear","month","getMonth","lastDay","totalDays","getDate","_","_2","selectors","decls","vars","consts","template","DateCalculatorComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DateCalculatorComponent_Template_input_ngModelChange_5_listener","$event","DateCalculatorComponent_Template_input_input_5_listener","DateCalculatorComponent_Template_button_click_6_listener","DateCalculatorComponent_Template_button_click_8_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate"],"sources":["C:\\Users\\anura\\OneDrive\\Desktop\\task\\nodejs\\angular\\myApp\\src\\app\\date-calculator.component.ts","C:\\Users\\anura\\OneDrive\\Desktop\\task\\nodejs\\angular\\myApp\\src\\app\\date-calculator.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-date-calculator',\r\n  templateUrl: './date-calculator.component.html',\r\n  styleUrls: ['./date-calculator.component.css'],\r\n})\r\nexport class DateCalculatorComponent {\r\n  selectedDates: string = '';\r\n  consoleOutput: string = ''; // Variable to store console log output\r\n\r\n  onDateInputChange() {\r\n    // Capture the input change and log it\r\n    this.consoleOutput = 'Input changed: ' + this.selectedDates;\r\n    console.log(this.consoleOutput);\r\n  }\r\n\r\n  calculateDaysInDates() {\r\n    // Calculate days and capture the result\r\n    const daysInDates = this.selectedDates.split(',').map(date => {\r\n      return this.calculateDaysFromDate(new Date(date.trim()));\r\n    });\r\n    this.consoleOutput = 'Days in Dates: ' + daysInDates.join(', ');\r\n    console.log(this.consoleOutput);\r\n  }\r\n\r\n  calculateDaysFromDate(date: Date): number {\r\n    const currentDate = new Date();\r\n    const difference = date.getTime() - currentDate.getTime();\r\n    const daysDifference = Math.floor(difference / (1000 * 60 * 60 * 24));\r\n    return daysDifference;\r\n  }\r\n\r\n  getDaysInMonth() {\r\n    // Calculate total days in the current month and capture the result\r\n    const currentDate = new Date();\r\n    const year = currentDate.getFullYear();\r\n    const month = currentDate.getMonth();\r\n    const lastDay = new Date(year, month + 1, 0);\r\n    const totalDays = lastDay.getDate();\r\n    this.consoleOutput = 'Total days in the current month: ' + totalDays;\r\n    console.log(this.consoleOutput);\r\n  }\r\n}\r\n","<div>\r\n    <h2>Angular Date Calculator</h2>\r\n    <label for=\"datesInput\">Select Dates (comma-separated):</label>\r\n    <input type=\"date\" id=\"datesInput\" [(ngModel)]=\"selectedDates\" (input)=\"onDateInputChange()\">\r\n  \r\n    <button (click)=\"calculateDaysInDates()\">Calculate Days in Dates</button>\r\n    <button (click)=\"getDaysInMonth()\">Get Total Days in Month</button>\r\n\r\n    <!-- Add a div to display console log output -->\r\n    <div id=\"consoleOutput\">\r\n        <p>Console Log Output:</p>\r\n        <p>{{ consoleOutput }}</p>\r\n    </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}